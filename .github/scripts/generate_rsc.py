#!/usr/bin/env python3
import os
import csv
import requests
from datetime import datetime

def fetch_ip_list(asn):
    """从GitHub获取指定ASN的IP列表"""
    url = f"https://raw.githubusercontent.com/ipverse/asn-ip/refs/heads/master/as/{asn}/ipv4-aggregated.txt"
    try:
        response = requests.get(url)
        response.raise_for_status()
        # 过滤掉注释行和空行
        ip_list = [line.strip() for line in response.text.split('\n') 
                  if line.strip() and not line.strip().startswith('#')]
        return ip_list
    except requests.exceptions.RequestException as e:
        print(f"Error fetching IP list for ASN {asn}: {e}")
        return []

def generate_rsc_file():
    """生成Mikrotik RSC文件"""
    if not os.path.exists('rule.list'):
        print("rule.list file not found")
        return
    
    rsc_content = [
        "# Generated by ASN2RSC GitHub Action",
        f"# Last updated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}",
        "# IP lists for Mikrotik RouterOS",
        "",
        "/ip firewall address-list"
    ]
    
    with open('rule.list', 'r') as f:
        csv_reader = csv.reader(f)
        for row in csv_reader:
            if len(row) >= 2:
                asn = row[0].strip()
                list_name = row[1].strip().replace('"', '')
                
                print(f"Processing ASN {asn} for list {list_name}")
                ip_list = fetch_ip_list(asn)
                
                if ip_list:
                    for ip in ip_list:
                        rsc_content.append(f"add address={ip} list={list_name} comment=\"ASN{asn}\"")
                else:
                    print(f"No IPs found for ASN {asn}")
    
    with open('asn.rsc', 'w') as f:
        f.write('\n'.join(rsc_content))
    
    print(f"Generated asn.rsc with {len(rsc_content) - 5} entries")

if __name__ == "__main__":
    generate_rsc_file()